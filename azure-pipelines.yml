# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- azuredevopscli-dev

jobs:

- job: 'Run_Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python27:
        python.version: '2.7.15'
      Python36:
        python.version: '3.6.5'
      Python37:
        python.version: '3.7.0'
    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install -r requirements.txt
    displayName: 'Install dependencies'

  # PowerShell
  # Run a PowerShell script on Windows, macOS, or Linux.
  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: 'scripts/setupCiMachine.ps1'
      #arguments: # Optional
      #script: '# Write your powershell commands here.' # Required when targetType == Inline
      #errorActionPreference: 'stop' # Optional. Options: stop, continue, silentlyContinue
      #failOnStderr: false # Optional
      #ignoreLASTEXITCODE: false # Optional
      #pwsh: false # Optional
      #workingDirectory: # Optional

  # PowerShell
  # Run a PowerShell script on Windows, macOS, or Linux.
  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: 'scripts/runTests.ps1'
      arguments: '$True'
      #script: '# Write your powershell commands here.' # Required when targetType == Inline
      #errorActionPreference: 'stop' # Optional. Options: stop, continue, silentlyContinue
      #failOnStderr: false # Optional
      #ignoreLASTEXITCODE: false # Optional
      #pwsh: false # Optional
      #workingDirectory: # Optional

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Publish'
  dependsOn: 'Run_Test'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  - script: python setup.py sdist
    displayName: 'Build sdist'
